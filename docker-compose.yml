version: "2.27"

services:
  postgres:
    container_name: service-postgres
    image: bitnami/postgresql:16
    volumes:
      - ./backend/sql/init:/docker-entrypoint-initdb.d
      - ./.pg_data:/bitnami/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: admin
      POSTGRESQL_USERNAME: user
      POSTGRESQL_PASSWORD: password
      POSTGRESQL_DATABASE: pg_service_template_db_1
      POSTGRESQL_PORT: 5432
      TZ: "Europe/Moscow"
    ports:
      - 5432:5432
    networks:
      - postgres
  postgres-2:
    container_name: service-postgres-2
    image: bitnami/postgresql:16
    volumes:
      - ./.pgdata_slave:/bitnami/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d admin -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: admin
      POSTGRESQL_MASTER_HOST: service-postgres
      POSTGRESQL_USERNAME: user
      POSTGRESQL_PASSWORD: password
      POSTGRESQL_DATABASE: pg_service_template_db_1
      POSTGRESQL_PORT: 5432
      TZ: "Europe/Moscow"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 5433:5432
    networks:
      - postgres

  service-container-1:
    image: conference_app:latest
    hostname: backend-1
    depends_on:
      - postgres
      - postgres-2
    ports:
      - 8080:8080
    working_dir: /usr/bin
    command: /usr/bin/service --config /etc/configs/static_config.yaml --config_vars /etc/configs/config_vars.docker.yaml
    networks:
      - postgres

  service-container-2:
    image: conference_app:latest
    hostname: backend-2
    depends_on:
      - postgres
      - postgres-2
    ports:
      - 8081:8080
    working_dir: /usr/bin
    command: /usr/bin/service --config /etc/configs/static_config.yaml --config_vars /etc/configs/config_vars.docker_readonly.yaml
    networks:
      - postgres
  service-container-3:
    image: conference_app:latest
    hostname: backend-3
    depends_on:
      - postgres
      - postgres-2
    ports:
      - 8082:8080
    working_dir: /usr/bin
    command: /usr/bin/service --config /etc/configs/static_config.yaml --config_vars /etc/configs/config_vars.docker_readonly.yaml
    networks:
      - postgres
  nginx:
    image: byjg/nginx-extras
    ports:
      - 80:80
    volumes:
      - ./nginx:/etc/nginx
      - ./nginx/static:/usr/share/nginx/html
    depends_on:
      - service-container-1
      - service-container-2
      - service-container-3
      - swagger
      - pg_admin
    networks:
      - postgres
  swagger:
    image: swaggerapi/swagger-ui
    container_name: swagger
    environment:
      - SWAGGER_JSON=/mnt/swagger/api-spec.yaml
    volumes:
      - ./schemas/openapi/:/mnt/swagger
    ports:
      - 30000:80
    networks:
      - postgres
  pg_admin:
    image: dpage/pgadmin4:latest
    container_name: pg_admin
    networks:
      - postgres
    ports:
      - 30001:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=default@email.com
      - PGADMIN_DEFAULT_PASSWORD=password

networks:
  postgres:
    driver: bridge
